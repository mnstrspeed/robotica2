//MASTER
#define BT_CONN 1
#define OUTBOX 5
#define INBOX 1
#define CLEARLINE(L) \
 TextOut(0,L," ");

sub BTCheck(int conn){
  if (!BluetoothStatus(conn)==NO_ERR){
    TextOut(5,LCD_LINE2,"Error");
    Wait(1000);
    Stop(true);
  }
}

task main(){
  int ack;
  int i;
  BTCheck(BT_CONN);
  TextOut(10,LCD_LINE1,"Master sending");
  while(true){
    i = Random(512);
    CLEARLINE(LCD_LINE3);
    NumOut(5,LCD_LINE3,i);
    ack = 0;
    SendRemoteNumber(BT_CONN,OUTBOX,i);
    until(ack==0xFF) {
      until(ReceiveRemoteNumber(INBOX,true,ack) == NO_ERR);
    }
    Wait(250);
  }
}

//SLAVE
#define BT_CONN 1
#define OUT_MBOX 1
#define IN_MBOX 5
sub BTCheck(int conn){
  if (!BluetoothStatus(conn)==NO_ERR){
    TextOut(5,LCD_LINE2,"Error");
    Wait(1000);
    Stop(true);
  }
}

task main(){
  int in;
  BTCheck(0);
  TextOut(5,LCD_LINE1,"Slave receiving");
  SendResponseNumber(OUT_MBOX,0xFF); //unblock master
  while(true){
    if (ReceiveRemoteNumber(IN_MBOX,true,in) != STAT_MSG_EMPTY_MAILBOX) {
      TextOut(0,LCD_LINE3," ");
      NumOut(5,LCD_LINE3,in);
      SendResponseNumber(OUT_MBOX,0xFF);
    }
    Wait(10); //take breath (optional)
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////


/*

               ``
            .++#+
            '':#'#+`
            ''+':#+:`    ```   `
            '+##+@+#      `#+.
            ,+#;;#@      `'.##
            ``:'#+#`  ` ``'.++ `
           `.#'+;+.`    +#,#+
           #'+#:,:'`` +#+'++:
          :;#'++:+#;;+#;:+# .
          +';+'#+@:,:,:;#+,,`
         `'#:#'#@+;++#:+++ :``
          #@'###@@#+####:    .
         `@@;+#####`     `   ,
          #'@#+'##          .,
         ;@';@'@#+`         .,
        ,:+#@@@##,          :,
        ,`+##+#@@           :.
        .`:+'++#@           :
        .  :###++   ` `.;:  .
        `:` ..,,::`;#+;:'+  ,`
        .., `` ..,:##'#;,'. +`
        .:`` ...`,.@;;::,,' .
        .`,  ```  `@++++:::.  `
`  ``    ..,,`````#'##;;:;,` ..``
 .``      ;..`` `';'#, `::':. ,,.`
 ```.     ``+#++++###.  ';;;: ,,
 ```       ` .;#''';:'`. ::,. .`
  ```     `#;: +##+'::,  :':``.
``  `.   ''',';+'+#'':'   .:`.,.
`  `    ;#+':'++#;++';'`  ' .``'`
   ``,  :#:  ``;+#;''+'`` .`, +'
    ..,`,#    ,,,++##:#  .`,`.
     .` `   .`       `   `. :
       ,  . `` `..``... .`` ``
         `,..,. .` `:. `:.`
        `   ``..  `..``,`
           `            `


*/

#define BT_CONN 0
#define OUT_MBOX 1
#define IN_MBOX 5

void wait_for_ack()
{
    byte ack = 0;
    while (ack != 0xFF)
    {
        while (ReceiveRemoteNumber(IN_MBOX, true, ack) != NO_ERR)
            Wait(10);
    }
}

task main()
{
    while (BluetoothStatus(BT_CONN) != NO_ERR)
        Wait(10);
    TextOut(0, LCD_LINE1, "Waiting");

    //SendResponseNumber(OUT_MBOX, 0xFF);
    while (true)
    {
        int in;
        while (ReceiveRemoteNumber(IN_MBOX, true, in) != NO_ERR)
            Wait(10);
        SendResponseNumber(OUT_MBOX, 0xFF);
        
        //SendRemoteNumber(BT_CONN, OUT_MBOX, 42);
        //wait_for_ack();
        
        ClearLine(LCD_LINE1);
        NumOut(0, LCD_LINE1, in);
    }
}

#define BT_CONN 1
#define OUTBOX 5
#define INBOX 1

void wait_for_ack()
{
    byte ack = 0;
    while (ack != 0xFF)
    {
        while (ReceiveRemoteNumber(INBOX, true, ack) != NO_ERR)
            Wait(10);
    }
}

task main()
{
    while (BluetoothStatus(BT_CONN) != NO_ERR)
        Wait(10);
    TextOut(0, LCD_LINE1, "Waiting");

    int x = 0;
    while (true)
    {
        SendRemoteNumber(BT_CONN, OUTBOX, x);
        wait_for_ack();
        
        //int in;
        //while (ReceiveRemoteNumber(INBOX, true, in) != NO_ERR)
        //    Wait(10);
        //SendResponseNumber(OUTBOX, 0xFF);
        //NumOut(0, LCD_LINE2, in);
        
        ClearLine(LCD_LINE1);
        NumOut(0, LCD_LINE1, x++);
        
        Wait(1000);
    }
}
